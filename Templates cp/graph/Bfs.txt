#include<bits/stdc++.h>
using namespace std;
int visited[110];
int level[110];
int parent[110];
vector<int>G[110];
void zero(int n)
{
    for(int i=0;i<=n+5;i++)
    {
        parent[i] = 0;
        visited[i] = 0;
        level[i] = 0;
        G[i].clear();
    }
}
void bfs(int u)
{
    parent[u] = -1;
    level[u] = 0;
    visited[u] = 1;
    queue<int>Q;
    Q.push(u);
    while(!Q.empty())
    {
        u = Q.front();
        for(int i=0;i<G[u].size();i++)
        {
            int v = G[u][i];
            if(visited[v]==0)
            {
                visited[v] = 1;
                parent[v] = u;
                level[v] = level[u] + 1;
                Q.push(v);
            }
        }
        Q.pop();
    }
}
int main()
{
    int n,m,a,b,i,j,x,y,e;
    while(scanf("%d %d",&n,&e)==2)
    {
        zero(n);
        for(i=1;i<=e;i++)
        {
            scanf("%d %d",&a,&b);
            G[a].push_back(b);
            G[b].push_back(a);
        }
        bfs(1);
    }
/*
7 8
1 2
1 5
5 3
2 4
5 2
3 4
3 6
4 7

*/
return 0;
}