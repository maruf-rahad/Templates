int ara[6] = {4,6,1,5,7,3,0,0,0};
int sparse[6][3];  // size of sparse array is sparse[number of element][log2(n)+1]  
int n = 6;	   // all the things is zero based

int powi(int a,int b)
{
    int sum = 1;
    for(int i=1;i<=b;i++)
    {
        sum = sum*a;
    }
    return sum;
}
void process()
{
    for(int i=0;i<n;i++)
    {
        sparse[i][0] = i;
    }

    for(int j=1;powi(2,j)<=n;j++)
    {
        for(int i=0;i+powi(2,j)-1<n;i++)
        {

            if(ara[sparse[i][j-1]]<ara[sparse[i+powi(2,j-1)][j-1]])
            {
                sparse[i][j] = sparse[i][j-1];
            }
            else
            {
                sparse[i][j] = sparse[i+powi(2,(j-1))][j-1];

            }
        }
    }
}

int query(int low,int high)
{
    int l = high-low+1;
    int k = log2(l);
    return min(ara[sparse[low][k]],ara[sparse[low+l-powi(2,k)][k]]);


}